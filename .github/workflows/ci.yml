name: ci

on:
  push:
    branches:
      - '*'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core v3.1.301
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
      - name: Setup .NET Core v5.0.103
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.103
      - name: Test with dotnet
        run: dotnet test -c Release /p:CollectCoverage=true /p:Threshold=80 /p:ThresholdType=line /p:CoverletOutputFormat=opencover
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./ValidateWorkflow.Tests/coverage.opencover.xml
          flags: unittests
          fail_ci_if_error: true

  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET Core v3.1.301
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
      - name: Setup .NET Core v5.0.103
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.103
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"xembly_validate-workflow-status" /o:"xembly" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" -Dsonar.cs.opencover.reportsPaths="./ValidateWorkflow.Tests/coverage.opencover.xml"
          dotnet test -c Release /p:CollectCoverage=true /p:Threshold=80 /p:ThresholdType=line /p:CoverletOutputFormat=opencover --logger trx
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Validate Status
        uses: ./
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          workflow: always-pass
